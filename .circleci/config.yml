version: 2.1

anchors:
  default_job_config: &default_job_config
    resource_class: small
    working_directory: /home/circleci/mailpoet
    environment:
      TZ: /usr/share/zoneinfo/Etc/UTC

  only_master_and_release: &only_master_and_release
    filters:
      branches:
        only:
          - master
          - release

  multisite_acceptance_config: &multisite_acceptance_config
    multisite: 1
    requires:
      - php7_unit
    <<: *only_master_and_release

executors:
  wpcli_php_oldest:
    <<: *default_job_config
    docker:
    - image: mailpoet/wordpress:7.0_20200203.1

  wpcli_php_latest:
    <<: *default_job_config
    docker:
      - image: mailpoet/wordpress:7.4_20200123.1

  wpcli_php_mysql_oldest:
    <<: *default_job_config
    docker:
    - image: mailpoet/wordpress:7.0_20200203.1
    - image: circleci/mysql:5.5-ram

  wpcli_php_mysql_latest:
    <<: *default_job_config
    docker:
      - image: mailpoet/wordpress:7.4_20200123.1
      - image: circleci/mysql:8.0-ram
        command: [--default-authentication-plugin=mysql_native_password]

jobs:
  build_and_code_qa:
    executor: wpcli_php_latest
    steps:
      - checkout
      - run:
          name: "Compute checksum for prefixer"
          command: find prefixer -type f -not -path 'prefixer/build/*' -not -path 'prefixer/vendor/*' | sort | xargs cat | sha512sum > prefixer-checksum
      - restore_cache:
          key: tools-{{ checksum "tools/install.php" }}
      - restore_cache:
          key: composer-{{ checksum "tasks/phpstan/composer.json" }}-{{ checksum "tasks/phpstan/composer.lock" }}
      - restore_cache:
          key: composer-{{ checksum "tasks/code_sniffer/composer.json" }}-{{ checksum "tasks/code_sniffer/composer.lock" }}
      - restore_cache:
          key: composer-{{ checksum "composer.json" }}-{{ checksum "composer.lock" }}
      - restore_cache:
          key: composer-prefixed-{{ checksum "prefixer-checksum" }}
      - restore_cache:
          keys:
            - npm-{{ checksum "package-lock.json" }}
            - npm- # fallback to most recent npm-* if not found by checksum
      - run:
          name: "Set up test environment"
          command: |
            # install plugin dependencies
            COMPOSER_DEV_MODE=1 php tools/install.php
            ./tools/vendor/composer.phar validate --no-check-all --no-check-publish
            ./tools/vendor/composer.phar validate --no-check-all --no-check-publish --working-dir=prefixer
            touch .env
            ./do install
            ./do compile:all --env production
            ./do doctrine:generate-metadata
            ./do doctrine:generate-proxies
            vendor/bin/codecept build
      - save_cache:
          key: tools-{{ checksum "tools/install.php" }}
          paths:
            - tools/vendor
      - save_cache:
          key: composer-{{ checksum "tasks/phpstan/composer.json" }}-{{ checksum "tasks/phpstan/composer.lock" }}
          paths:
            - tasks/phpstan/vendor
      - save_cache:
          key: composer-{{ checksum "tasks/code_sniffer/composer.json" }}-{{ checksum "tasks/code_sniffer/composer.lock" }}
          paths:
            - tasks/code_sniffer/vendor
      - save_cache:
          key: composer-{{ checksum "composer.json" }}-{{ checksum "composer.lock" }}
          paths:
            - vendor
      - save_cache:
          key: composer-prefixed-{{ checksum "prefixer-checksum" }}
          paths:
            - prefixer/build
            - prefixer/vendor
            - vendor-prefixed
      - save_cache:
          key: npm-{{ checksum "package-lock.json" }}
          paths:
            - ~/.npm
      - run:
          name: "Composer security check"
          command: |
            ./do s:composer
      - run:
          name: Group acceptance tests to run in parallel
          command: |
            ./do test:acceptance-group-tests
      - run:
          name: Dump tests ENV variables for acceptance tests
          command: |
            (printenv | grep WP_TEST_ > .env) || true
      - run:
          name: "QA Scripts"
          command: ./do qa
      - persist_to_workspace:
          root: /home/circleci/mailpoet
          paths:
            - .
  static_analysis:
    executor: wpcli_php_mysql_latest
    steps:
    - attach_workspace:
        at: /home/circleci/mailpoet
    - run:
        name: "Set up environment"
        command: |
          source ./.circleci/setup.bash && setup php7
    - run:
        name: "Static analysis"
        command: ./do qa:phpstan
  js_tests:
    executor: wpcli_php_oldest
    steps:
    - attach_workspace:
       at: /home/circleci/mailpoet
    - run:
        name: "Preparing test results folder"
        command: mkdir test-results
    - run:
        name: "JS Newsletter Editor Tests"
        command: |
          mkdir test-results/mocha
          ./do t:newsletter-editor test-results/mocha/newsletter_editor_junit.xml
    - run:
        name: "JS Tests"
        command: |
          ./do t:j test-results/mocha/junit.xml
    - store_test_results:
        path: test-results/mocha
    - store_artifacts:
        path: test-results/mocha
        destination: mocha
  acceptance_tests:
    working_directory: /home/circleci/mailpoet
    machine: true
    parameters:
      index:
        type: integer
      multisite:
        type: integer
        default: 0
    steps:
      - attach_workspace:
          at: /home/circleci/mailpoet
      - run:
          name: "Set up virtual host"
          command: echo 127.0.0.1 mailpoet.loc | sudo tee -a /etc/hosts
      - run:
          name: Run acceptance tests
          command: |
              mkdir -m 777 -p tests/_output/exceptions
              cd tests/docker
              docker-compose run -e SKIP_DEPS=1 -e CIRCLE_BRANCH=${CIRCLE_BRANCH} -e MULTISITE=<< parameters.multisite >> codeception -g acceptance_group_<< parameters.index >> --steps --debug -vvv --html --xml
      - run:
          name: Check exceptions
          command: |
              if [ "$(ls tests/_output/exceptions/*.html)" ]; then
                echo "There were some exceptions during the tests run"
                exit 1
              fi
      - store_artifacts:
          path: tests/_output
      - store_test_results:
          path: tests/_output
  nightly_acceptance_tests:
    working_directory: /home/circleci/mailpoet
    machine: true
    parameters:
      mysql_command:
        type: string
        default: --verbose
      mysql_image_version:
        type: string
      wordpress_image_version:
        type: string
    environment:
      MYSQL_COMMAND: << parameters.mysql_command >>
      MYSQL_IMAGE_VERSION: << parameters.mysql_image_version >>
      WORDPRESS_IMAGE_VERSION: << parameters.wordpress_image_version >>
    steps:
      - attach_workspace:
          at: /home/circleci/mailpoet
      - run:
          name: "Set up virtual host"
          command: echo 127.0.0.1 mailpoet.loc | sudo tee -a /etc/hosts
      - run:
          name: Run acceptance tests
          command: |
              mkdir -m 777 -p tests/_output/exceptions
              cd tests/docker
              docker-compose run -e SKIP_DEPS=1 -e CIRCLE_BRANCH=${CIRCLE_BRANCH} codeception --steps --debug -vvv --html --xml
      - run:
          name: Check exceptions
          command: |
              if [ "$(ls tests/_output/exceptions/*.html)" ]; then
                echo "There were some exceptions during the tests run"
                exit 1
              fi
      - store_artifacts:
          path: tests/_output
      - store_test_results:
          path: tests/_output
  php7_unit:
    executor: wpcli_php_mysql_latest
    steps:
      - attach_workspace:
         at: /home/circleci/mailpoet
      - run:
          name: "Set up virtual host"
          command: echo 127.0.0.1 mailpoet.loc | sudo tee -a /etc/hosts
      - run:
          name: "Prepare example.com for testing"
          command: echo 127.0.0.1 example.com | sudo tee -a /etc/hosts
      - run:
          name: "Set up test environment"
          command: source ./.circleci/setup.bash && setup php7
      - run:
          name: "PHP Unit tests"
          command: |
            ./do t:u --xml
      - store_test_results:
          path: tests/_output
      - store_artifacts:
          path: tests/_output
          destination: codeception
      - store_artifacts:
          path: /tmp/fake-mailer/
          destination: fake-mailer
  php7_integration:
    executor: wpcli_php_mysql_latest
    steps:
      - attach_workspace:
         at: /home/circleci/mailpoet
      - run:
          name: "Set up virtual host"
          command: echo 127.0.0.1 mailpoet.loc | sudo tee -a /etc/hosts
      - run:
          name: "Prepare example.com for testing"
          command: echo 127.0.0.1 example.com | sudo tee -a /etc/hosts
      - run:
          name: "Set up test environment"
          command: source ./.circleci/setup.bash && setup php7
      - run:
          name: "PHP Integration tests"
          command: |
            ./do test:integration --xml
      - store_test_results:
          path: tests/_output
      - store_artifacts:
          path: tests/_output
          destination: codeception
      - store_artifacts:
          path: /tmp/fake-mailer/
          destination: fake-mailer
  php7_integration_multisite:
    executor: wpcli_php_mysql_latest
    steps:
      - attach_workspace:
          at: /home/circleci/mailpoet
      - run:
          name: "Set up virtual host"
          command: echo 127.0.0.1 mailpoet.loc | sudo tee -a /etc/hosts
      - run:
          name: "Prepare example.com for testing"
          command: echo 127.0.0.1 example.com | sudo tee -a /etc/hosts
      - run:
          name: "Set up test environment"
          command: source ./.circleci/setup.bash && setup php7_multisite
      - run:
          name: "PHP Integration tests"
          command: |
            ./do t:multisite-integration --xml
      - store_test_results:
          path: tests/_output
      - store_artifacts:
          path: tests/_output
          destination: codeception
      - store_artifacts:
          path: /tmp/fake-mailer/
          destination: fake-mailer
  build_release_zip:
    executor: wpcli_php_mysql_latest
    resource_class: medium
    steps:
      - attach_workspace:
          at: /home/circleci/mailpoet
      - run:
          name: "Set up environment"
          command: |
            source ./.circleci/setup.bash && setup php7
            sudo apt-get update
            sudo apt-get install python-pip gettext
            sudo pip install transifex-client
            mv wordpress ..
            sed -i 's/^WP_ROOT=.*$/WP_ROOT=\/home\/circleci\/wordpress/g' .env
            echo ${CIRCLE_BUILD_NUM} > release_zip_build_number.txt
      - run:
          name: "Build"
          command: ./build.sh
      - store_artifacts:
          path: /home/circleci/mailpoet/mailpoet.zip
      - persist_to_workspace:
          root: /home/circleci/mailpoet
          paths:
          - release_zip_build_number.txt
  test_deployment:
    executor: wpcli_php_latest
    steps:
      - attach_workspace:
          at: /home/circleci/mailpoet
      - run:
          name: "Deploy"
          command: |
            RELEASE_ZIP_BUILD_NUMBER=`cat release_zip_build_number.txt`
            curl "${MAILPOET_TEST_DEPLOY_HOST}/wp-admin/admin-ajax.php?action=mailpoet_test_deploy&key=${MAILPOET_TEST_DEPLOY_KEY}&build=${RELEASE_ZIP_BUILD_NUMBER}&plugin_name=${CIRCLE_PROJECT_REPONAME}" | tee deploy.log | grep "Done! Installed successfully"
      - store_artifacts:
          path: deploy.log

workflows:
  build_and_test:
    jobs:
      - build_and_code_qa
      - php7_unit:
          requires:
            - build_and_code_qa
      - static_analysis:
          requires:
            - build_and_code_qa
      - acceptance_tests:
          index: 1
          name: acceptance_tests_1
          requires:
            - php7_unit
      - acceptance_tests:
          index: 2
          name: acceptance_tests_2
          requires:
            - php7_unit
      - acceptance_tests:
          index: 3
          name: acceptance_tests_3
          requires:
            - php7_unit
      - acceptance_tests:
          index: 4
          name: acceptance_tests_4
          requires:
            - php7_unit
      - acceptance_tests:
          index: 5
          name: acceptance_tests_5
          requires:
            - php7_unit
      - js_tests:
          requires:
            - build_and_code_qa
      - php7_integration:
          requires:
            - php7_unit
      - acceptance_tests:
          <<: *multisite_acceptance_config
          index: 1
          name: acceptance_tests_multisite_1
      - acceptance_tests:
          <<: *multisite_acceptance_config
          index: 2
          name: acceptance_tests_multisite_2
      - acceptance_tests:
          <<: *multisite_acceptance_config
          index: 3
          name: acceptance_tests_multisite_3
      - acceptance_tests:
          <<: *multisite_acceptance_config
          index: 4
          name: acceptance_tests_multisite_4
      - acceptance_tests:
          <<: *multisite_acceptance_config
          index: 5
          name: acceptance_tests_multisite_5
      - php7_integration_multisite:
          <<: *only_master_and_release
          requires:
            - php7_unit
      - build_release_zip:
          requires:
            - build_and_code_qa
            - acceptance_tests_1
            - acceptance_tests_2
            - acceptance_tests_3
            - acceptance_tests_4
            - acceptance_tests_5
            - js_tests
            - php7_integration
      - test_deployment:
          <<: *only_master_and_release
          requires:
            - build_release_zip

  nightly:
    triggers:
      - schedule:
          cron: "0 22 * * 1-5"
          filters:
            branches:
              only:
                - master
    jobs:
      - build_and_code_qa
      # Latest version - PHP 7.4, MySQL 8.0, WordPress 5.3
      - nightly_acceptance_tests:
          mysql_command: --default-authentication-plugin=mysql_native_password
          mysql_image_version: 8.0-ram
          wordpress_image_version: wp-5.3_php7.4_20191209.1
          name: acceptance_latest
          requires:
            - build_and_code_qa
      # Oldest supported version - PHP 7.0, MySQL 5.5, WordPress 4.9
      - nightly_acceptance_tests:
          mysql_command: --max_allowed_packet=100M
          mysql_image_version: 5.5-ram
          wordpress_image_version: wp-4.9_php7.0_20200130.1
          name: acceptance_oldest
          requires:
            - build_and_code_qa
