version: 2.1

orbs:
  slack: circleci/slack@4.2.0

slack-fail-post-step: &slack-fail-post-step
  post-steps:
    - slack/notify:
        channel: mailpoet-dev-feeds
        branch_pattern: 'trunk,release'
        event: fail
        custom: |
          {
            "blocks": [
              {
                "type": "header",
                "text": {
                  "type": "plain_text",
                  "text": "Job Failed :red_circle:",
                  "emoji": true
                }
              },
              {
                "type": "section",
                "fields": [
                  {
                    "type": "mrkdwn",
                    "text": "*Job*: ${CIRCLE_JOB}"
                  },
                  {
                    "type": "mrkdwn",
                    "text": "*Project*: $CIRCLE_PROJECT_REPONAME"
                  },
                  {
                    "type": "mrkdwn",
                    "text": "*Branch*: $CIRCLE_BRANCH"
                  },
                  {
                    "type": "mrkdwn",
                    "text": "*Author*: $CIRCLE_USERNAME"
                  }
                ]
              },
              {
                "type": "actions",
                "elements": [
                  {
                    "type": "button",
                    "text": {
                      "type": "plain_text",
                      "text": "View Job"
                    },
                    "url": "${CIRCLE_BUILD_URL}"
                  }
                ]
              }
            ]
          }

anchors:
  default_job_config: &default_job_config
    resource_class: small
    working_directory: /home/circleci/mailpoet/mailpoet
    environment:
      TZ: /usr/share/zoneinfo/Etc/UTC

  only_trunk_and_release: &only_trunk_and_release
    filters:
      branches:
        only:
          - trunk
          - release

  only_trunk_and_cot: &only_trunk_and_cot
    filters:
      branches:
        only:
          - trunk
          - /^cot-.*/

  multisite_acceptance_config: &multisite_acceptance_config
    multisite: 1
    requires:
      - unit_tests
      - static_analysis_php8
    <<: *only_trunk_and_release

executors:
  wpcli_php_oldest:
    <<: *default_job_config
    docker:
      - image: mailpoet/wordpress:7.2_20220309.1

  wpcli_php_max_wporg:
    <<: *default_job_config
    docker:
      - image: mailpoet/wordpress:7.4_20210122.1

  wpcli_php_latest:
    <<: *default_job_config
    docker:
      - image: mailpoet/wordpress:8.1_20220718.1

  wpcli_php_mysql_oldest:
    <<: *default_job_config
    docker:
      - image: mailpoet/wordpress:7.2_20220309.1
      - image: cimg/mysql:5.7

  wpcli_php_mysql_latest:
    <<: *default_job_config
    docker:
      - image: mailpoet/wordpress:8.1_20220718.1
      - image: cimg/mysql:8.0
        command: --default-authentication-plugin=mysql_native_password --character-set-server=utf8mb4 --collation-server=utf8mb4_unicode_520_ci

jobs:
  build:
    executor: wpcli_php_latest
    resource_class: medium+
    working_directory: /home/circleci/mailpoet/mailpoet
    steps:
      - checkout:
          path: /home/circleci/mailpoet
      - run:
          name: 'Set PNPM store directory'
          command: pnpm config set store-dir ~/.pnpm-store
      - run:
          name: 'Compute checksum for prefixer'
          command: find prefixer -type f -not -path 'prefixer/build/*' -not -path 'prefixer/vendor/*' | sort | xargs cat | sha512sum > prefixer-checksum
      - restore_cache:
          key: tools-{{ checksum "tools/install.php" }}
      - restore_cache:
          key: composer-{{ checksum "tasks/phpstan/composer.json" }}-{{ checksum "tasks/phpstan/composer.lock" }}
      - restore_cache:
          key: composer-{{ checksum "tasks/code_sniffer/composer.json" }}-{{ checksum "tasks/code_sniffer/composer.lock" }}
      - restore_cache:
          key: composer-{{ checksum "composer.json" }}-{{ checksum "composer.lock" }}
      - restore_cache:
          key: composer-prefixed-{{ checksum "prefixer-checksum" }}
      - restore_cache:
          keys:
            - pnpm-{{ checksum "../pnpm-lock.yaml" }}
            - pnpm- # fallback to most recent pnpm-* if not found by checksum
      - run:
          name: 'Set up test environment'
          command: |
            COMPOSER_DEV_MODE=1 php tools/install.php
            ./tools/vendor/composer.phar validate --no-check-all --no-check-publish
            ./tools/vendor/composer.phar validate --no-check-all --no-check-publish --working-dir=prefixer
            touch .env
            ./do install
            ./do compile:all --env production
            ./do doctrine:generate-cache
            vendor/bin/codecept build
            ./do twig:generate-cache
      - run:
          name: 'Check Prettier formatting'
          command: ./do qa:prettier-check
      - save_cache:
          key: tools-{{ checksum "tools/install.php" }}
          paths:
            - tools/vendor
      - save_cache:
          key: composer-{{ checksum "tasks/phpstan/composer.json" }}-{{ checksum "tasks/phpstan/composer.lock" }}
          paths:
            - tasks/phpstan/vendor
      - save_cache:
          key: composer-{{ checksum "tasks/code_sniffer/composer.json" }}-{{ checksum "tasks/code_sniffer/composer.lock" }}
          paths:
            - tasks/code_sniffer/vendor
      - save_cache:
          key: composer-{{ checksum "composer.json" }}-{{ checksum "composer.lock" }}
          paths:
            - vendor
      - save_cache:
          key: composer-prefixed-{{ checksum "prefixer-checksum" }}
          paths:
            - prefixer/build
            - prefixer/vendor
            - vendor-prefixed
      - save_cache:
          key: pnpm-{{ checksum "../pnpm-lock.yaml" }}
          paths:
            - ~/.pnpm-store
      - run:
          name: Download additional WP Plugins for tests
          command: |
            ./do download:woo-commerce-zip 6.8.2
            ./do download:woo-commerce-subscriptions-zip 4.5.1
            ./do download:woo-commerce-memberships-zip 1.23.0
            ./do download:woo-commerce-blocks-zip 8.4.0
      - run:
          name: Dump tests ENV variables for acceptance tests
          command: |
            (printenv | grep WP_TEST_ > .env) || true
      - persist_to_workspace:
          root: /home/circleci
          paths:
            - .node
            - mailpoet
  build_premium:
    executor: wpcli_php_latest
    resource_class: medium
    working_directory: /home/circleci/mailpoet
    steps:
      - attach_workspace:
          at: /home/circleci
      - add_ssh_keys
      - run:
          name: 'Install Premium plugin'
          command: |
            # Add GitHub to known_hosts because there is no checkout step in this job
            echo "github.com ssh-rsa AAAAB3NzaC1yc2EAAAABIwAAAQEAq2A7hRGmdnm9tUDbO9IDSwBK6TbQa+PXYPCPy6rbTrTtw7PHkccKrpp0yVhp5HdEIcKr6pLlVDBfOLX9QUsyCOV0wzfjIJNlGEYsdlLJizHhbn2mUjvSAHQqZETYP81eFzLQNnPHt4EVVUh7VfDESU84KezmD5QlWpXLmvU31/yMf+Se8xhHTvKSCZIFImWwoG6mbUoWf9nzpIoaSjB+weqqUUmpaaasXVal72J+UX2B+2RPW3RcT0eOzQgqlJL3RKrTJvdsjE3JEAvGq3lGHSZXy28G3skua2SmVi/w4yCE6gbODqnTWlg7+wC604ydGXA8VJiS5ap43JXiUFFAaQ==" >> ~/.ssh/known_hosts
            git clone ${MAILPOET_PREMIUM_REPO_URL} mailpoet-premium
      - restore_cache:
          key: premium-tools-{{ checksum "mailpoet-premium/tools/install.php" }}
      - restore_cache:
          key: premium-composer-{{ checksum "mailpoet-premium/composer.json" }}-{{ checksum "mailpoet-premium/composer.lock" }}
      - run:
          name: 'Set up test environment'
          command: |
            # install Premium dependencies
            MAILPOET_FREE_PATH=$(pwd)/mailpoet
            cd mailpoet-premium
            COMPOSER_DEV_MODE=1 php tools/install.php
            echo "MAILPOET_FREE_PATH=${MAILPOET_FREE_PATH}" > .env
            ./tools/vendor/composer.phar validate --no-check-all --no-check-publish
            ./do install
            ./do compile:all --env production
      - save_cache:
          key: premium-tools-{{ checksum "mailpoet-premium/tools/install.php" }}
          paths:
            - mailpoet-premium/tools/vendor
      - save_cache:
          key: premium-composer-{{ checksum "mailpoet-premium/composer.json" }}-{{ checksum "mailpoet-premium/composer.lock" }}
          paths:
            - mailpoet-premium/vendor
      - persist_to_workspace:
          root: /home/circleci
          paths:
            - .node
            - mailpoet

  static_analysis:
    executor: wpcli_php_latest
    resource_class: medium
    working_directory: /home/circleci/mailpoet/mailpoet
    parameters:
      php_version:
        type: integer
        default: 70200
    steps:
      - attach_workspace:
          at: /home/circleci
      - run:
          name: 'Static analysis'
          command: ./do qa:phpstan --php-version=<< parameters.php_version >>
  qa_js:
    executor: wpcli_php_latest
    working_directory: /home/circleci/mailpoet/mailpoet
    steps:
      - attach_workspace:
          at: /home/circleci
      - run:
          name: 'QA Frontend Assets'
          command: ./do qa:frontend-assets
  qa_php:
    executor: wpcli_php_latest
    working_directory: /home/circleci/mailpoet/mailpoet
    steps:
      - attach_workspace:
          at: /home/circleci
      - run:
          name: 'QA PHP'
          command: ./do qa:php
  qa_php_oldest:
    executor: wpcli_php_oldest
    working_directory: /home/circleci/mailpoet/mailpoet
    steps:
      - attach_workspace:
          at: /home/circleci
      - run:
          name: 'QA PHP'
          command: ./do qa:php
  qa_php_max_wporg:
    executor: wpcli_php_max_wporg
    steps:
      - attach_workspace:
          at: /home/circleci
      - run:
          name: 'QA PHP'
          command: ./do qa:php-max-wporg
  js_tests:
    executor: wpcli_php_latest
    working_directory: /home/circleci/mailpoet/mailpoet
    steps:
      - attach_workspace:
          at: /home/circleci
      - run:
          name: 'Preparing test results folder'
          command: mkdir test-results
      - run:
          name: 'JS Newsletter Editor Tests'
          command: |
            mkdir test-results/mocha
            ./do t:newsletter-editor test-results/mocha/newsletter_editor_junit.xml
      - run:
          name: 'JS Tests'
          command: |
            ./do t:j test-results/mocha/junit.xml
      - store_test_results:
          path: test-results/mocha
      - store_artifacts:
          path: test-results/mocha
          destination: mocha
  acceptance_tests:
    parallelism: 20
    working_directory: /home/circleci/mailpoet/mailpoet
    machine:
      image: ubuntu-2204:2022.07.1
    parameters:
      multisite:
        type: integer
        default: 0
      group:
        type: string
        default: ''
      mysql_command:
        type: string
        default: ''
      mysql_image_version:
        type: string
        default: ''
      codeception_image_version:
        type: string
        default: ''
      wordpress_image_version:
        type: string
        default: ''
      woo_core_version:
        type: string
        default: ''
      woo_subscriptions_version:
        type: string
        default: ''
      woo_memberships_version:
        type: string
        default: ''
      woo_blocks_version:
        type: string
        default: ''
      enable_cot:
        type: integer
        default: 0
      enable_cot_sync:
        type: integer
        default: 0
      allow_fail:
        type: integer
        default: 0
    environment:
      MYSQL_COMMAND: << parameters.mysql_command >>
      MYSQL_IMAGE_VERSION: << parameters.mysql_image_version >>
      CODECEPTION_IMAGE_VERSION: << parameters.codeception_image_version >>
      WORDPRESS_IMAGE_VERSION: << parameters.wordpress_image_version >>
    steps:
      - attach_workspace:
          at: /home/circleci
      - run:
          name: 'Set up virtual host'
          command: echo 127.0.0.1 mailpoet.loc | sudo tee -a /etc/hosts
      - run:
          name: 'Pull test docker images'
          # Pull docker images with 3 retries
          command: i='0';while ! docker-compose -f tests/docker/docker-compose.yml pull && ((i < 3)); do sleep 3 && i=$[$i+1]; done
      - when:
          condition: << parameters.woo_core_version >>
          steps:
            - run:
                name: Download WooCommerce Core
                command: |
                  cd tests/docker
                  docker-compose run --rm -w /project --entrypoint "./do download:woo-commerce-zip << parameters.woo_core_version >>" --no-deps -e WP_GITHUB_USERNAME=${WP_GITHUB_USERNAME} -e WP_GITHUB_TOKEN=${WP_GITHUB_TOKEN} codeception_acceptance
      - when:
          condition: << parameters.woo_subscriptions_version >>
          steps:
            - run:
                name: Download WooCommerce Subscriptions
                command: |
                  cd tests/docker
                  docker-compose run --rm -w /project --entrypoint "./do download:woo-commerce-subscriptions-zip << parameters.woo_subscriptions_version >>" --no-deps -e WP_GITHUB_USERNAME=${WP_GITHUB_USERNAME} -e WP_GITHUB_TOKEN=${WP_GITHUB_TOKEN} codeception_acceptance
      - when:
          condition: << parameters.woo_memberships_version >>
          steps:
            - run:
                name: Download WooCommerce Memberships
                command: |
                  cd tests/docker
                  docker-compose run --rm -w /project --entrypoint "./do download:woo-commerce-memberships-zip << parameters.woo_memberships_version >>" --no-deps -e WP_GITHUB_USERNAME=${WP_GITHUB_USERNAME} -e WP_GITHUB_TOKEN=${WP_GITHUB_TOKEN} codeception_acceptance
      - when:
          condition: << parameters.woo_blocks_version >>
          steps:
            - run:
                name: Download WooCommerce Blocks
                command: |
                  cd tests/docker
                  docker-compose run --rm -w /project --entrypoint "./do download:woo-commerce-blocks-zip << parameters.woo_blocks_version >>" --no-deps -e WP_GITHUB_USERNAME=${WP_GITHUB_USERNAME} -e WP_GITHUB_TOKEN=${WP_GITHUB_TOKEN} codeception_acceptance
      - run:
          name: Group acceptance tests
          command: |
            # Convert test result filename values to be relative paths because the circleci CLI's split command requires exact matches
            if [ -e $CIRCLE_INTERNAL_TASK_DATA/circle-test-results/results.json ]; then
              sed -i.bak 's#/wp-core/wp-content/plugins/mailpoet/##g' $CIRCLE_INTERNAL_TASK_DATA/circle-test-results/results.json
            fi
            # `circleci tests split` returns different values based on the container it's run on
            # in case group is defined find only tests containing the group
            if [[ -n '<< parameters.group >>' ]]; then
              grep -rw 'tests/acceptance' -e '@group << parameters.group >>' | sed -e "s/:.*//" | circleci tests split --split-by=timings > tests/acceptance/_groups/circleci_split_group
            else
              circleci tests glob "tests/acceptance/**/*Cest.php" | circleci tests split --split-by=timings > tests/acceptance/_groups/circleci_split_group
            fi
            cat tests/acceptance/_groups/circleci_split_group
      - run:
          name: Run acceptance tests
          command: |
            mkdir -m 777 -p tests/_output/exceptions
            cd tests/docker
            args=(
              --steps
              --debug
              -vvv
              --html
              --xml
              -g circleci_split_group
            )
            if [[ << parameters.allow_fail >> == 1 ]]; then
              args+=(--no-exit)
            fi
            docker-compose run -e SKIP_DEPS=1 \
            -e CIRCLE_BRANCH=${CIRCLE_BRANCH} \
            -e CIRCLE_JOB=${CIRCLE_JOB} \
            -e MULTISITE=<< parameters.multisite >> \
            -e ENABLE_COT=<< parameters.enable_cot >> \
            -e ENABLE_COT_SYNC=<< parameters.enable_cot_sync >> \
            codeception_acceptance "${args[@]}"
      - when:
          condition:
            not:
              equal: [1, << parameters.allow_fail >>]
          steps:
            - run:
                name: Check exceptions
                command: |
                  if [ "$(ls tests/_output/exceptions/*.html)" ]; then
                    echo "There were some exceptions during the tests run"
                    exit 1
                  fi
      - store_artifacts:
          path: tests/_output
      - store_test_results:
          path: tests/_output
  unit_tests:
    working_directory: /home/circleci/mailpoet/mailpoet
    parameters:
      executor:
        type: string
        default: wpcli_php_mysql_latest
    executor: << parameters.executor >>
    steps:
      - attach_workspace:
          at: /home/circleci
      - run:
          name: 'Set up virtual host'
          command: echo 127.0.0.1 mailpoet.loc | sudo tee -a /etc/hosts
      - run:
          name: 'Prepare example.com for testing'
          command: echo 127.0.0.1 example.com | sudo tee -a /etc/hosts
      - run:
          name: 'Set up test environment'
          command: source ../.circleci/setup.bash && setup php7
      - run:
          name: 'PHP Unit tests'
          command: |
            ./do t:u --xml
      - store_test_results:
          path: tests/_output
      - store_artifacts:
          path: tests/_output
          destination: codeception
      - store_artifacts:
          path: /tmp/fake-mailer/
          destination: fake-mailer
  integration_tests:
    working_directory: /home/circleci/mailpoet/mailpoet
    machine:
      image: ubuntu-2204:2022.07.1
    environment:
      CODECEPTION_IMAGE_VERSION: << parameters.codeception_image_version >>
    parameters:
      codeception_image_version:
        type: string
        default: ''
      group:
        type: string
        default: ''
      skip_group:
        type: string
        default: ''
      skip_plugins:
        type: integer
        default: 0
      enable_cot:
        type: integer
        default: 0
      enable_cot_sync:
        type: integer
        default: 0
      multisite:
        type: integer
        default: 0
      woo_core_version:
        type: string
        default: ''
      allow_fail:
        type: integer
        default: 0
    steps:
      - attach_workspace:
          at: /home/circleci
      - run:
          name: 'Pull test docker images'
          # Pull docker images with 3 retries
          command: i='0';while ! docker-compose -f tests/docker/docker-compose.yml pull && ((i < 3)); do sleep 3 && i=$[$i+1]; done
      - when:
          condition: << parameters.woo_core_version >>
          steps:
            - run:
                name: Download WooCommerce Core
                command: |
                  cd tests/docker
                  docker-compose run --rm -w /project --entrypoint "./do download:woo-commerce-zip << parameters.woo_core_version >>" --no-deps codeception_integration
      - run:
          name: 'PHP Integration tests'
          command: |
            mkdir -m 777 -p tests/_output/exceptions
            cd tests/docker
            args=(
              --steps
              --debug
              -vvv
              --html
              --xml
            )
            if [[ -n '<< parameters.group >>' ]]; then
              args+=(--group << parameters.group >>)
            fi
            if [[ -n '<< parameters.skip_group >>' ]]; then
              args+=(--skip-group << parameters.skip_group >>)
            fi
            if [[ << parameters.allow_fail >> == 1 ]]; then
              args+=(--no-exit)
            fi
            docker-compose run -e SKIP_DEPS=1 \
              -e CIRCLE_BRANCH=${CIRCLE_BRANCH} \
              -e CIRCLE_JOB=${CIRCLE_JOB} \
              -e SKIP_PLUGINS=<< parameters.skip_plugins >> \
              -e WP_TEST_MAILER_ENABLE_SENDING=${WP_TEST_MAILER_ENABLE_SENDING} \
              -e WP_TEST_ENABLE_NETWORK_TESTS=${WP_TEST_ENABLE_NETWORK_TESTS} \
              -e WP_TEST_MAILER_MAILPOET_API=${WP_TEST_MAILER_MAILPOET_API} \
              -e WP_TEST_MAILER_SENDGRID_API=${WP_TEST_MAILER_SENDGRID_API} \
              -e WP_TEST_MAILER_AMAZON_ACCESS=${WP_TEST_MAILER_AMAZON_ACCESS} \
              -e WP_TEST_MAILER_AMAZON_REGION=${WP_TEST_MAILER_AMAZON_REGION} \
              -e WP_TEST_MAILER_AMAZON_SECRET=${WP_TEST_MAILER_AMAZON_SECRET} \
              -e WP_TEST_IMPORT_MAILCHIMP_API=${WP_TEST_IMPORT_MAILCHIMP_API} \
              -e WP_TEST_IMPORT_MAILCHIMP_LISTS=${WP_TEST_IMPORT_MAILCHIMP_LISTS} \
              -e WP_TEST_MAILER_SMTP_HOST=${WP_TEST_MAILER_SMTP_HOST} \
              -e WP_TEST_MAILER_SMTP_LOGIN=${WP_TEST_MAILER_SMTP_LOGIN} \
              -e WP_TEST_MAILER_SMTP_PASSWORD=${WP_TEST_MAILER_SMTP_PASSWORD} \
              -e MULTISITE=<< parameters.multisite >> \
              -e ENABLE_COT=<< parameters.enable_cot >> \
              -e ENABLE_COT_SYNC=<< parameters.enable_cot_sync >> \
              codeception_integration "${args[@]}"
      - store_test_results:
          path: tests/_output
      - store_artifacts:
          path: tests/_output
          destination: codeception
      - store_artifacts:
          path: /mailhog-data
          destination: mailhog-data
  build_release_zip:
    executor: wpcli_php_mysql_latest
    resource_class: medium+
    steps:
      - attach_workspace:
          at: /home/circleci
      - run:
          name: 'Set up environment'
          command: |
            source ../.circleci/setup.bash && setup php7
            sudo apt-get update
            sudo apt-get install gettext
            sed -i 's/^WP_ROOT=.*$/WP_ROOT=\/home\/circleci\/mailpoet\/wordpress/g' .env
            echo ${CIRCLE_BUILD_NUM} > release_zip_build_number.txt
      - run:
          name: 'Build'
          command: ./build.sh
      - store_artifacts:
          path: /home/circleci/mailpoet/mailpoet/mailpoet.zip
      - persist_to_workspace:
          root: /home/circleci/mailpoet
          paths:
            - mailpoet/release_zip_build_number.txt

workflows:
  build_and_test:
    jobs:
      - build:
          <<: *slack-fail-post-step
      - unit_tests:
          <<: *slack-fail-post-step
          name: unit_tests
          requires:
            - build
      - static_analysis:
          <<: *slack-fail-post-step
          name: static_analysis_php7
          php_version: 70200
          requires:
            - build
      - static_analysis:
          <<: *slack-fail-post-step
          name: static_analysis_php8
          php_version: 80000
          requires:
            - build
      - qa_js:
          <<: *slack-fail-post-step
          requires:
            - build
      - qa_php:
          <<: *slack-fail-post-step
          requires:
            - build
      - qa_php_oldest:
          <<: *slack-fail-post-step
          requires:
            - build
      - qa_php_max_wporg:
          <<: *slack-fail-post-step
          requires:
            - build
      - acceptance_tests:
          <<: *slack-fail-post-step
          name: acceptance_tests
          requires:
            - unit_tests
            - static_analysis_php8
            - qa_js
            - qa_php
      - acceptance_tests:
          <<: *slack-fail-post-step
          <<: *only_trunk_and_cot
          name: acceptance_tests_woo_cot_sync
          group: woo
          enable_cot: 1
          enable_cot_sync: 1
          allow_fail: 1
          woo_core_version: woo-cot-beta # Temporarily force COT beta version
          requires:
            - unit_tests
            - static_analysis_php8
            - qa_js
            - qa_php
      - acceptance_tests:
          <<: *slack-fail-post-step
          <<: *only_trunk_and_cot
          name: acceptance_tests_woo_cot_no_sync
          group: woo
          enable_cot: 1
          enable_cot_sync: 0
          allow_fail: 1
          woo_core_version: woo-cot-beta # Temporarily force COT beta version
          requires:
            - unit_tests
            - static_analysis_php8
            - qa_js
            - qa_php
      - acceptance_tests:
          <<: *slack-fail-post-step
          <<: *only_trunk_and_cot
          name: acceptance_tests_woo_cot_off
          group: woo
          woo_core_version: woo-cot-beta # Temporarily force COT beta version
          requires:
            - unit_tests
            - static_analysis_php8
            - qa_js
            - qa_php
      - js_tests:
          <<: *slack-fail-post-step
          requires:
            - build
      - integration_tests:
          <<: *slack-fail-post-step
          group: woo
          name: integration_test_woocommerce
          requires:
            - unit_tests
            - static_analysis_php8
            - qa_js
            - qa_php
      - integration_tests:
          <<: *slack-fail-post-step
          <<: *only_trunk_and_cot
          group: woo
          enable_cot: 1
          enable_cot_sync: 1
          allow_fail: 1
          woo_core_version: woo-cot-beta # Temporarily force COT beta version
          name: integration_test_woo_cot_sync
          requires:
            - unit_tests
            - static_analysis_php8
            - qa_js
            - qa_php
      - integration_tests:
          <<: *slack-fail-post-step
          <<: *only_trunk_and_cot
          group: woo
          enable_cot: 1
          enable_cot_sync: 0
          allow_fail: 1
          woo_core_version: woo-cot-beta # Temporarily force COT beta version
          name: integration_test_woo_cot_no_sync
          requires:
            - unit_tests
            - static_analysis_php8
            - qa_js
            - qa_php
      - integration_tests:
          <<: *slack-fail-post-step
          <<: *only_trunk_and_cot
          group: woo
          woo_core_version: woo-cot-beta # Temporarily force COT beta version
          name: integration_test_woo_cot_off
          requires:
            - unit_tests
            - static_analysis_php8
            - qa_js
            - qa_php
      - integration_tests:
          <<: *slack-fail-post-step
          skip_group: woo
          skip_plugins: 1
          name: integration_test_base
          requires:
            - unit_tests
            - static_analysis_php8
            - qa_js
            - qa_php
      - acceptance_tests:
          <<: *slack-fail-post-step
          <<: *multisite_acceptance_config
          name: acceptance_tests_multisite
      - integration_tests:
          <<: *slack-fail-post-step
          <<: *only_trunk_and_release
          multisite: 1
          name: integration_tests_multisite
          requires:
            - unit_tests
            - static_analysis_php7
            - static_analysis_php8
            - qa_js
            - qa_php
      - build_release_zip:
          <<: *slack-fail-post-step
          requires:
            - build
            - acceptance_tests
            - js_tests
            - integration_test_woocommerce
            - integration_test_base

  nightly:
    triggers:
      - schedule:
          cron: '0 22 * * 1-5'
          filters:
            branches:
              only:
                - trunk
    jobs:
      - build:
          <<: *slack-fail-post-step
      - acceptance_tests:
          <<: *slack-fail-post-step
          name: acceptance_latest
          woo_core_version: latest
          woo_subscriptions_version: latest
          woo_memberships_version: latest
          woo_blocks_version: latest
          requires:
            - build
      - acceptance_tests:
          <<: *slack-fail-post-step
          name: acceptance_oldest
          woo_core_version: 6.2.2
          woo_subscriptions_version: 4.3.0
          woo_memberships_version: 1.21.0
          woo_blocks_version: 5.3.2
          mysql_command: --max_allowed_packet=100M
          mysql_image_version: 5.7.36
          codeception_image_version: 7.4-cli_20210126.1
          wordpress_image_version: wp-5.6_php7.2_20220406.1
          requires:
            - build
      - unit_tests:
          <<: *slack-fail-post-step
          name: unit_latest
          requires:
            - build
      - unit_tests:
          <<: *slack-fail-post-step
          name: unit_oldest
          executor: wpcli_php_mysql_oldest
          requires:
            - build
      - integration_tests:
          <<: *slack-fail-post-step
          name: integration_latest
          requires:
            - build
      - integration_tests:
          <<: *slack-fail-post-step
          name: integration_oldest
          codeception_image_version: 7.2-cli_20220605.0
          requires:
            - build
      - build_premium:
          <<: *slack-fail-post-step
          requires:
            - build
      - acceptance_tests:
          <<: *slack-fail-post-step
          name: acceptance_with_premium_latest
          requires:
            - build_premium
      - unit_tests:
          <<: *slack-fail-post-step
          name: unit_with_premium_latest
          requires:
            - build_premium
      - integration_tests:
          <<: *slack-fail-post-step
          name: integration_with_premium_latest
          requires:
            - build_premium
